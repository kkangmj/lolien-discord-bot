import com.github.spotbugs.SpotBugsTask

plugins {
    id 'org.springframework.boot' version '2.0.9.RELEASE'
    id 'java'
    id 'war'
    id 'checkstyle'
    id "io.freefair.lombok" version "3.8.0"
    id  'com.github.spotbugs' version '2.0.0'
}

apply plugin: 'io.spring.dependency-management'

group = 'kr.webgori'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

spotbugs {
    toolVersion = '3.1.12'
}

tasks.withType(SpotBugsTask) {
    reports.xml.enabled = false
    reports.html.enabled = true
}

bootWar {
    archiveFileName = 'ROOT.war'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    jcenter()
    maven { url = "https://jitpack.io" }
}

ext {
    set('springCloudDependencyVersion', "Finchley.SR4")
}

sourceSets {
    // we define `main` sourceSet here, so SpotBugs Gradle Plugin generates `spotbugsMain` task
    main {
        java.srcDirs = ['src/main/java']
    }
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('org.springframework.boot:spring-boot-starter-data-redis')
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-quartz')

    implementation group: 'at.stefangeyer.challonge.serializer', name: 'gson', version: '2.0.1'
    implementation group: 'at.stefangeyer.challonge.rest', name: 'retrofit', version: '2.0.1'

    implementation group: 'it.ozimov', name: 'embedded-redis', version: '0.7.2'
    implementation("net.dv8tion:JDA:3.8.3_462")
    implementation group: 'com.google.guava', name: 'guava', version: '27.1-jre'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.3'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
    runtimeOnly 'mysql:mysql-connector-java'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation group: 'com.github.taycaldwell', name: 'riot-api-java', version: '4.3.0'
    implementation group: 'org.jsoup', name: 'jsoup', version: '1.11.3'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudDependencyVersion}"
    }
}

tasks.withType(Test) {
    systemProperty "file.encoding", "UTF-8"
}

sourceSets {
    main {
        java {
            srcDirs 'src/main/java'
        }
    }
}

checkstyle {
    toolVersion = '8.5'
}

/**
 * ignoreFailures = false 설정만으로 checkstyle 위배 시 빌드가 실패해야 하지만
 * 다음과 같은 버그가 있습니다.
 * https://github.com/gradle/gradle/issues/881
 *
 * 이 구성은 버그가 해결될 때 까지 사용되는 임시방편입니다.
 * */
tasks.withType(Checkstyle).each { checkstyleTask ->
    checkstyleTask.doLast {
        reports.all { report ->
            def outputFile = report.destination
            if (outputFile.exists() && outputFile.text.contains("<error ")) {
                throw new GradleException("There were checkstyle warnings! For more info check $outputFile")
            }
        }
    }
}